import machine, ssd1306, framebuf, uos
from time import sleep_ms

"""
    playing with SSD1306.
    not recommended to use at this stage
    
    @author github.com/ZsBT
"""

class zssd(ssd1306.SSD1306_I2C):
    def __init__(self, i2c, width=128, height=64):
        super().__init__(width, height, i2c)
    
    # clear screen (fill with black)
    def cls(self):
        self.fill(0)
        self.show()
        
    def random(self, N):
        return int.from_bytes(uos.urandom(2),'big') % N

    def maszat(self):
        self.framebuf.line( self.random() % self.width, self.random() % self.height, self.random() % self.width, slf.random() % self.height, 1)
    
    def fut(self):
        W = 67
        H = 60
        # step paratlan legyen
        step = 7
        im1 = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xc0` \x10\x18\x08\x04\x04\x04\x02\x02\x02\x03\x01\x01\x01\x01\x01\x01\x01\x01\x03\x02\x02\x02\x04\x04\x04\x08\x18\x10 `\xc0\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xe0\x18\x06\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\xe0\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x03\x06\x1cp\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\x07\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x07\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\xf6>\x02\x00\x00\x00\x00\x00\x03\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xf0\x818\xc0\x00\x00\x00\x00\x008\x1c\x1c0 `@\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xe0``00\x18\x0c\x06\x03\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x0e\x183L\xd8\xb0`\xc0\xc0\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xc0@ \x90@ \x18\x0c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xf0\xf8p`\xe0\xc0\xc0\x80\x80\x00\x01\x01\x02\x05\r\x0b\x8b\xf6\xfe\xfe\xfe\xfe~>,(((((,l|tvrz}=>>?\xff\xfe\xfc\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xf0\xff\x7f\x1f\x00\x00\x00\x01\x01\x03\x07\x0f\x0f\x1e>||\xfc\xff\xff\x7f\x1f\x07\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07?\xff\xf8\x00\x00\x00\x80\x80\xc0\xc0\xc0\xc0\xc0\xc0\xc0@\x00')
        im2 = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80@ 0\x18\x18\x0c\x04\x02\x02\x02\x02\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x02\x02\x02\x02\x06\x0c\x10\x10\x10  \xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0p\x98\x1e\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x80\x00\x00\x00\x00\x00\x00\x00\x00\x03\x05\x0c\x180\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\x07\xd0\x07\x00\x00\x00\x00\x00\x80\x80\xc0\x80\x00\x00\x00\x00\x00\x00\x00\x00\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x03\x01\x00\x00\x00\x00@\xc0\x00\x00\x00\x00\x00\x00\x06\x98`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07y\xc2-p\x80\x00\x00\x00\x00\x00\x01\x03\x0e\x1000000\xc0\xc0\xc0\xc0\xc0\xc0\xc0\x80\x80\x80\xc0\xc0``` \x10\x18\x0f\x03\x00\x00\x00\x00\x00\x80`\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x03\x05\x0b\x16\x1c\x18p\xf0\xc0\xc0\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0 <\x04\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x03\x07\x07\x0f\xeb\xfc\xfc\xf8\x0c,\\<8H\x18\x08(444|\xf4\xfa\xf8=\x02\x02\x02\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x80\x80\x80\x80\x80\x80\x80\xc0\xf8\xff\xff\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfb\xff?\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
        fb1 = framebuf.FrameBuffer(im1, W, H, framebuf.MVLSB)
        fb2 = framebuf.FrameBuffer(im2, W, H, framebuf.MVLSB)
        
        for x in range(0, self.width, step) :
            self.fill(0)
            self.framebuf.blit(fb1 if 0==x%2 else fb2,x,0)
            self.show()
            sleep_ms(200)
        return self
        
